<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <help_text>fontsize=14
fontfamily=Monospaced //possible: SansSerif,Serif,Monospaced



//////////////////////////////////////////////////////////////////////////////////////////////
// Welcome to UMLet!
//
// Double-click on elements to add them to the diagram, or to copy them
// Edit elements by modifying the text in this panel
// Hold Ctrl to select multiple elements
// Use Ctrl+mouse to select via lasso
//
// Use +/- or Ctrl+mouse wheel to zoom
// Drag a whole relation at its central square icon
//
// Press Ctrl+C to copy the whole diagram to the system clipboard (then just paste it to, eg, Word)
// Edit the files in the "palettes" directory to create your own element palettes
//
// Select "Custom Elements &gt; New..." to create new element types
//////////////////////////////////////////////////////////////////////////////////////////////


// This text will be stored with each diagram;  use it for notes.</help_text>
  <zoom_level>7</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>70</x>
      <y>420</y>
      <w>308</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>*Manager&lt;T&gt;*
bg=yellow
--
- data : List&lt;T&gt;
--
+add(key: String, t: T): void
+get(key: String): T
+del(key: String): void
+getAll(): List&lt;T&gt;
--
Notes:
constructor(typename: String)
lance excessões caso algum método dê erro.
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>448</x>
      <y>231</y>
      <w>392</w>
      <h>252</h>
    </coordinates>
    <panel_attributes>*Clinica*
bg=yellow
--
_- nextSerId: int_
_- nextAniId: int_
- mSer: Manager&lt;Servico&gt;
- mAni: Manager&lt;Animal&gt;
- mPes: Manager&lt;Pessoa&gt;
--
+ addCli(cliente: Cliente): void
+ addSer(nome: String, valor: String): void
+ addAni(idCli: String, nomeAni: String, especie: String): void
+ vender(idCli: String, nomeAni: String, idSer: String): void
+ saldo(): float
--
Notes:
Faça os getAll para retornar as listas respectivas
  getAllCli(): List&lt;Cliente&gt;
  getAllSer(): List&lt;Servico&gt;
  getAllAni(): List&lt;Animal&gt;
Faça os get recebendo o respectivo id
  getCliente(idCli): Cliente
  getServico(idSer): Servico
  getAnimal (idAni): Animal</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>70</x>
      <y>252</y>
      <w>224</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>*Cliente*
bg=yellow
--
- idCli : String
- nome: String
- animais: Manager&lt;Animal&gt;
--
+ addAni(ani: Animal): void
--
Notes:
constructor(idCli, nome)
toString
get idCli nome animais
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>462</x>
      <y>56</y>
      <w>308</w>
      <h>133</h>
    </coordinates>
    <panel_attributes>*Servico*
bg=yellow
--
+ idSer: int
+ nome: String
+ valor: float
--

--
Notes:
constructor(idSer, nome, especie)
toString
atributos públicos pra simplificar
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>70</x>
      <y>56</y>
      <w>308</w>
      <h>147</h>
    </coordinates>
    <panel_attributes>*Animal*
bg=yellow
--
+ idAni: int
+ nome: String
+ especie: String
+ dono: Cliente
--

--
Notes:
constructor(idAni, nome, especie, dono)
toString
atributos públicos pra simplificar
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>287</x>
      <y>294</y>
      <w>175</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>230.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>371</x>
      <y>161</y>
      <w>91</w>
      <h>105</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>110.0;130.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>511</x>
      <y>182</y>
      <w>21</w>
      <h>63</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;70.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>203</x>
      <y>196</y>
      <w>21</w>
      <h>70</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>196</x>
      <y>378</y>
      <w>21</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;60.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>371</x>
      <y>420</y>
      <w>91</w>
      <h>21</h>
    </coordinates>
    <panel_attributes>lt=-</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
</diagram>
